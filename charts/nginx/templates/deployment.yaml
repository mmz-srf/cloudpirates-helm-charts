apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nginx.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "nginx.labels" . | nindent 4 }}
  {{- with (include "nginx.annotations" .) }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nginx.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "nginx.selectorLabels" . | nindent 8 }}
      annotations:
        {{- with (include "nginx.annotations" .) }}
        {{- . | nindent 8 }}
        {{- end }}
        {{- if or .Values.serverConfig .Values.streamServerConfig }}
        checksum/server-configuration: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- end }}
    spec:
{{- with (include "nginx.imagePullSecrets" .) }}
{{ . | nindent 6 }}
{{- end }}
      serviceAccountName: {{ include "nginx.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.cloneStaticSiteFromGit.enabled }}
      initContainers:
        - name: git-clone-repository
          image: "{{ .Values.cloneStaticSiteFromGit.image.registry }}/{{ .Values.cloneStaticSiteFromGit.image.repository }}:{{ .Values.cloneStaticSiteFromGit.image.tag }}"
          imagePullPolicy: {{ .Values.cloneStaticSiteFromGit.image.pullPolicy }}
          {{- if .Values.cloneStaticSiteFromGit.gitClone.command }}
          command: {{- toYaml .Values.cloneStaticSiteFromGit.gitClone.command | nindent 12 }}
          {{- else }}
          command:
            - /bin/sh
            - -ec
            - |
              [[ -f "/opt/bitnami/scripts/git/entrypoint.sh" ]] && source "/opt/bitnami/scripts/git/entrypoint.sh"
              git clone {{ .Values.cloneStaticSiteFromGit.repository }} --branch {{ .Values.cloneStaticSiteFromGit.branch }} /app
          {{- end }}
          {{- if .Values.cloneStaticSiteFromGit.gitClone.args }}
          args: {{- toYaml .Values.cloneStaticSiteFromGit.gitClone.args | nindent 12 }}
          {{- end }}
          {{- if .Values.cloneStaticSiteFromGit.extraEnvVars }}
          env:
            {{- toYaml .Values.cloneStaticSiteFromGit.extraEnvVars | nindent 12 }}
          {{- end }}
          {{- if .Values.cloneStaticSiteFromGit.extraEnvVarsSecret }}
          envFrom:
            - secretRef:
                name: {{ .Values.cloneStaticSiteFromGit.extraEnvVarsSecret }}
          {{- end }}
          {{- if .Values.cloneStaticSiteFromGit.gitSync.resources }}
          resources: {{- toYaml .Values.cloneStaticSiteFromGit.gitSync.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: static-site
              mountPath: /app
            {{- if .Values.cloneStaticSiteFromGit.extraVolumeMounts }}
            {{- toYaml .Values.cloneStaticSiteFromGit.extraVolumeMounts | nindent 12 }}
            {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext: {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          image: {{ include "nginx.image" . | quote }}
          imagePullPolicy: {{ include "common.imagePullPolicy" (dict "image" .Values.image) }}
          ports:
            {{- range .Values.containerPorts }}
            - name: {{ .name }}
              containerPort: {{ .containerPort }}
              protocol: {{ .protocol | default "TCP" }}
            {{- end }}
          {{- if .Values.extraEnv }}
          env:
            {{- range .Values.extraEnv }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- if eq .Values.livenessProbe.type "httpGet" }}
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ (index .Values.containerPorts 0).name }}
            {{- else }}
            tcpSocket:
              port: {{ (index .Values.containerPorts 0).name }}
            {{- end }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- if eq .Values.readinessProbe.type "httpGet" }}
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ (index .Values.containerPorts 0).name }}
            {{- else }}
            tcpSocket:
              port: {{ (index .Values.containerPorts 0).name }}
            {{- end }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          {{- end }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: emptydir
              mountPath: /tmp
              subPath: tmp-dir
            - name: emptydir
              mountPath: /run
              subPath: run-dir
            - name: emptydir
              mountPath: /var/cache/nginx/client_temp
              subPath: client-temp-dir
            - name: emptydir
              mountPath: /var/cache/nginx/proxy_temp
              subPath: proxy-temp-dir
            - name: emptydir
              mountPath: /var/cache/nginx/fastcgi_temp
              subPath: fastcgi-temp-dir
            - name: emptydir
              mountPath: /var/cache/nginx/uwsgi_temp
              subPath: uwsgi-temp-dir
            - name: emptydir
              mountPath: /var/cache/nginx/scgi_temp
              subPath: scgi-temp-dir
          {{- if .Values.cloneStaticSiteFromGit.enabled }}
            - name: static-site
              mountPath: /usr/share/nginx/html
          {{- end }}
          {{- if or .Values.config .Values.existingConfigConfigmap }}
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          {{- end }}
          {{- if or .Values.serverConfig .Values.existingServerConfigConfigmap }}
            - name: nginx-server-config
              mountPath: /etc/nginx/conf.d
          {{- end }}
          {{- if or .Values.streamServerConfig .Values.existingStreamServerConfigConfigmap }}
            - name: stream-server-config
              mountPath: /etc/nginx/conf.d
          {{- end }}
          {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
        {{- if .Values.cloneStaticSiteFromGit.enabled }}
        - name: git-repo-syncer
          image: "{{ .Values.cloneStaticSiteFromGit.image.registry }}/{{ .Values.cloneStaticSiteFromGit.image.repository }}:{{ .Values.cloneStaticSiteFromGit.image.tag }}"
          imagePullPolicy: {{ .Values.cloneStaticSiteFromGit.image.pullPolicy }}
          {{- if .Values.cloneStaticSiteFromGit.gitSync.command }}
          command: {{- toYaml .Values.cloneStaticSiteFromGit.gitSync.command | nindent 12 }}
          {{- else }}
          command:
            - /bin/sh
            - -ec
            - |
              [[ -f "/opt/bitnami/scripts/git/entrypoint.sh" ]] && source "/opt/bitnami/scripts/git/entrypoint.sh"
              while true; do
                cd /app && git pull origin {{ .Values.cloneStaticSiteFromGit.branch }}
                sleep {{ .Values.cloneStaticSiteFromGit.interval }}
              done
          {{- end }}
          {{- if .Values.cloneStaticSiteFromGit.gitSync.args }}
          args: {{- toYaml .Values.cloneStaticSiteFromGit.gitSync.args | nindent 12 }}
          {{- end }}
          {{- if .Values.cloneStaticSiteFromGit.extraEnvVars }}
          env:
            {{- toYaml .Values.cloneStaticSiteFromGit.extraEnvVars | nindent 12 }}
          {{- end }}
          {{- if .Values.cloneStaticSiteFromGit.extraEnvVarsSecret }}
          envFrom:
            - secretRef:
                name: {{ .Values.cloneStaticSiteFromGit.extraEnvVarsSecret }}
          {{- end }}
          {{- if .Values.cloneStaticSiteFromGit.gitSync.resources }}
          resources: {{- toYaml .Values.cloneStaticSiteFromGit.gitSync.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: static-site
              mountPath: /app
            {{- if .Values.cloneStaticSiteFromGit.extraVolumeMounts }}
            {{- toYaml .Values.cloneStaticSiteFromGit.extraVolumeMounts | nindent 12 }}
            {{- end }}
        {{- end }}
      volumes:
        - name: emptydir
          emptyDir: {}
        {{- if .Values.cloneStaticSiteFromGit.enabled }}
        - name: static-site
          emptyDir: {}
        {{- end }}
      {{- if or .Values.serverConfig .Values.streamServerConfig }}
        - name: nginx-server-config
          configMap:
            name: {{ include "nginx.fullname" . }}
            {{- if .Values.serverConfig }}
            items:
              - key: server-config.conf
                path: server-config.conf
            {{- end }}
            {{- if .Values.streamServerConfig }}
            items:
              - key: stream-server-config.conf
                path: stream-server-config.conf
            {{- end }}
      {{- end }}
      {{- if or .Values.config .Values.existingConfigConfigmap }}
        - name: nginx-config
          configMap:
            name: {{ include "nginx.configConfigmapName" . }}
            items:
              - key: nginx.conf
                path: nginx.conf
      {{- end }}
      {{- if or .Values.serverConfig .Values.existingServerConfigConfigmap }}
        - name: server-config
          configMap:
            name: {{ include "nginx.serverConfigConfigmapName" . }}
            items:
              - key: server-config.conf
                path: server-config.conf
      {{- end }}
      {{- if or .Values.streamServerConfig .Values.existingStreamServerConfigConfigmap }}
        - name: stream-server-config
          configMap:
            name: {{ include "nginx.streamServerConfigConfigmapName" . }}
            items:
              - key: stream-server-config.conf
                path: stream-server-config.conf
      {{- end }}
      {{- if .Values.extraVolumes }}
      {{- toYaml .Values.extraVolumes | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
